(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg sync recursive":
/*!*******************!*\
  !*** ../pkg sync ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../pkg sync recursive\";\n\n//# sourceURL=webpack:///../pkg_sync?");

/***/ }),

/***/ "../pkg/chip8_wasm.js":
/*!****************************!*\
  !*** ../pkg/chip8_wasm.js ***!
  \****************************/
/*! exports provided: __wbg_new_3a746f2619705add, __wbg_call_f54d3a6dadb199ca, __wbg_self_ac379e780a0d8b94, __wbg_crypto_1e4302b85d4f64a2, __wbg_getRandomValues_1b4ba144162a5c9e, __wbg_getRandomValues_1ef11e888e5228e9, __wbg_require_6461b1e9a0d7c34a, __wbg_randomFillSync_1b52c8482374c55b, __wbindgen_is_undefined, __wbindgen_jsval_eq, __wbindgen_throw, Emulator, __wbindgen_object_drop_ref */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_3a746f2619705add\", function() { return __wbg_new_3a746f2619705add; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_f54d3a6dadb199ca\", function() { return __wbg_call_f54d3a6dadb199ca; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_self_ac379e780a0d8b94\", function() { return __wbg_self_ac379e780a0d8b94; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_crypto_1e4302b85d4f64a2\", function() { return __wbg_crypto_1e4302b85d4f64a2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_getRandomValues_1b4ba144162a5c9e\", function() { return __wbg_getRandomValues_1b4ba144162a5c9e; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_getRandomValues_1ef11e888e5228e9\", function() { return __wbg_getRandomValues_1ef11e888e5228e9; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_require_6461b1e9a0d7c34a\", function() { return __wbg_require_6461b1e9a0d7c34a; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_randomFillSync_1b52c8482374c55b\", function() { return __wbg_randomFillSync_1b52c8482374c55b; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_is_undefined\", function() { return __wbindgen_is_undefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_jsval_eq\", function() { return __wbindgen_jsval_eq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Emulator\", function() { return Emulator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony import */ var _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chip8_wasm_bg */ \"../pkg/chip8_wasm_bg.wasm\");\n\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory = new Uint8Array(_chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArray8ToWasm(arg) {\n    const ptr = _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction __wbg_new_3a746f2619705add(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    return addHeapObject(new Function(varg0));\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction __wbg_call_f54d3a6dadb199ca(arg0, arg1) {\n    return addHeapObject(getObject(arg0).call(getObject(arg1)));\n}\n\nfunction __wbg_self_ac379e780a0d8b94(arg0) {\n    return addHeapObject(getObject(arg0).self);\n}\n\nfunction __wbg_crypto_1e4302b85d4f64a2(arg0) {\n    return addHeapObject(getObject(arg0).crypto);\n}\n\nfunction __wbg_getRandomValues_1b4ba144162a5c9e(arg0) {\n    return addHeapObject(getObject(arg0).getRandomValues);\n}\n\nfunction getArrayU8FromWasm(ptr, len) {\n    return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nfunction __wbg_getRandomValues_1ef11e888e5228e9(arg0, arg1, arg2) {\n    let varg1 = getArrayU8FromWasm(arg1, arg2);\n    getObject(arg0).getRandomValues(varg1);\n}\n\nfunction __wbg_require_6461b1e9a0d7c34a(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    return addHeapObject(__webpack_require__(\"../pkg sync recursive\")(varg0));\n}\n\nfunction __wbg_randomFillSync_1b52c8482374c55b(arg0, arg1, arg2) {\n    let varg1 = getArrayU8FromWasm(arg1, arg2);\n    getObject(arg0).randomFillSync(varg1);\n}\n\nfunction __wbindgen_is_undefined(i) { return getObject(i) === undefined ? 1 : 0; }\n\nfunction __wbindgen_jsval_eq(a, b) { return getObject(a) === getObject(b) ? 1 : 0; }\n\nfunction __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\nfunction freeEmulator(ptr) {\n\n    _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_emulator_free\"](ptr);\n}\n/**\n*/\nclass Emulator {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Emulator.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeEmulator(ptr);\n    }\n\n    /**\n    * @returns {Emulator}\n    */\n    static new() {\n        return Emulator.__wrap(_chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_new\"]());\n    }\n    /**\n    * @returns {void}\n    */\n    tick() {\n        return _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_tick\"](this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n    decrement_timers() {\n        return _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_decrement_timers\"](this.ptr);\n    }\n    /**\n    * @param {Uint8Array} data\n    * @returns {void}\n    */\n    load(data) {\n        const ptr0 = passArray8ToWasm(data);\n        const len0 = WASM_VECTOR_LEN;\n        try {\n            return _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_load\"](this.ptr, ptr0, len0);\n\n        } finally {\n            _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        return _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_height\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        return _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_width\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    pixels() {\n        return _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_pixels\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    display_timer() {\n        return _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_display_timer\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    sound_timer() {\n        return _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_sound_timer\"](this.ptr);\n    }\n    /**\n    * @param {number} key\n    * @returns {void}\n    */\n    key_down(key) {\n        return _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_key_down\"](this.ptr, key);\n    }\n    /**\n    * @param {number} key\n    * @returns {void}\n    */\n    key_up(key) {\n        return _chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"emulator_key_up\"](this.ptr, key);\n    }\n}\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction __wbindgen_object_drop_ref(i) { dropObject(i); }\n\n\n\n//# sourceURL=webpack:///../pkg/chip8_wasm.js?");

/***/ }),

/***/ "../pkg/chip8_wasm_bg.wasm":
/*!*********************************!*\
  !*** ../pkg/chip8_wasm_bg.wasm ***!
  \*********************************/
/*! exports provided: memory, __wbg_emulator_free, emulator_new, emulator_tick, emulator_decrement_timers, emulator_load, emulator_height, emulator_width, emulator_pixels, emulator_display_timer, emulator_sound_timer, emulator_key_down, emulator_key_up, __wbindgen_malloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./chip8_wasm */ \"../pkg/chip8_wasm.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/chip8_wasm_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var chip8_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chip8-wasm */ \"../pkg/chip8_wasm.js\");\n/* harmony import */ var chip8_wasm_chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! chip8-wasm/chip8_wasm_bg */ \"../pkg/chip8_wasm_bg.wasm\");\n\n\n\nconst PIXEL_SIZE = 15,\n  ON_COLOR = '#00CCCC',\n  OFF_COLOR = 'rgba(0,0,0,0.2)',\n  emulator = chip8_wasm__WEBPACK_IMPORTED_MODULE_0__[\"Emulator\"].new(),\n  height = emulator.height(),\n  width = emulator.width(),\n  canvas = document.getElementById('emulator'),\n  keyMap = {\n    49: 0x1, // 1\n    50: 0x2, // 2\n    51: 0x3, // 3\n    52: 0xc, // 4\n    81: 0x4, // Q\n    87: 0x5, // W\n    69: 0x6, // E\n    82: 0xd, // R\n    65: 0x7, // A\n    83: 0x8, // S\n    68: 0x9, // D\n    70: 0xe, // F\n    90: 0xa, // Z\n    88: 0x0, // X\n    67: 0xb, // C\n    86: 0xf // V\n  }\n\ncanvas.height = PIXEL_SIZE * height\ncanvas.width = PIXEL_SIZE * width\n\nconst ctx = canvas.getContext('2d')\n\nfunction tick() {\n  for(let i = 0; i <= 8; i++) {\n    emulator.tick()\n  }\n\n\n  drawCells()\n  beep(emulator.sound_timer() != 0)\n\n  emulator.decrement_timers()\n  animationFrame = requestAnimationFrame(tick)\n}\n\nconst getIndex = (row, column) => {\n  return row * width + column\n}\n\nfunction drawCells() {\n  const cellsPtr = emulator.pixels()\n  const cells = new Uint8Array(chip8_wasm_chip8_wasm_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, cellsPtr, width * height)\n\n  ctx.beginPath()\n\n  for (let row = 0; row < height; row++) {\n    for (let col = 0; col < width; col++) {\n      const idx = getIndex(row, col)\n\n      // let rect_func;\n      ctx.fillStyle = cells[idx] === 0 ? OFF_COLOR : ON_COLOR\n\n      ctx.fillRect(\n        col * PIXEL_SIZE,\n        row * PIXEL_SIZE,\n        PIXEL_SIZE,\n        PIXEL_SIZE\n      )\n    }\n  }\n\n  ctx.stroke()\n}\n\nlet animationFrame\n\nasync function loadRom(name) {\n  if (animationFrame) cancelAnimationFrame(animationFrame)\n  let i = await fetch(`roms/${name}`)\n  let buffer = await i.arrayBuffer()\n  let rom = new Uint8Array(buffer, 0, buffer.byteLength)\n  emulator.load(rom)\n  animationFrame = requestAnimationFrame(tick)\n}\n\nlet audioContext = window.AudioContext && new AudioContext || window.webkitAudioContext && new webkitAudioContext,\n  beeper\n\nfunction beep(on) {\n  if (on && !beeper) {\n    beeper = audioContext.createOscillator()\n    beeper.connect(audioContext.destination)\n    beeper.type = \"triangle\"\n    beeper.start()\n  } else if(!on && beeper) {\n    beeper.stop()\n    beeper = null\n  }\n}\n\ndocument.addEventListener(\"keydown\", event => {\n  emulator.key_down(keyMap[event.keyCode]);\n})\n\ndocument.addEventListener(\"keyup\", event => {\n  emulator.key_up(keyMap[event.keyCode]);\n})\n\ndocument.getElementById('games').addEventListener('change', function(event) {\n  loadRom(this.value)\n  this.blur()\n})\n\nloadRom('INVADERS')\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);